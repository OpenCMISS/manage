# This module is used to condition the selection of the MPI if OPENCMISS_MPI is set

set(_PRE_SELECT_MPI FALSE)
if (OPENCMISS_MPI)
    log("Pre-selecting MPI: ${OPENCMISS_MPI}")
    if (OPENCMISS_MPI IN_LIST _MNEMONICS)
        set(_PRE_SELECT_MPI TRUE)
    else ()
        message(FATAL_ERROR "Unknown MPI requested: ${OPENCMISS_MPI}, requested MPI must be one of ${_MNEMONICS}.")
    endif ()
endif ()

set(DEBUG_MESSAGE FALSE)
if (_PRE_SELECT_MPI)
    find_package(MPI QUIET)
    set(_mpi_implementation_found ${MPI_FOUND})
    clear_find_mpi_variables()
    find_program_all(MPIEXEC_EXECUTABLES
        NAMES ${_MPIEXEC_NAMES}
        PATH_SUFFIXES bin sbin
        HINTS ${MPI_HINT_DIRS}
        DOC "Executable for running MPI programs."
    )
    set(_IMPLEMENTATIONS_FOUND)
    foreach(_mpiexec ${MPIEXEC_EXECUTABLES})
        get_mpiexec_mnemonic(${_mpiexec} MPIEXEC_MNEMONIC)
        list(APPEND _IMPLEMENTATIONS_FOUND ${MPIEXEC_MNEMONIC})
    endforeach()
    set(_mpi_matched FALSE)
    while(NOT _mpi_matched AND _mpi_implementation_found)
        log("Looking for an MPI ...")
        clear_find_mpi_variables()
        find_package(MPI QUIET)
        set(_mpi_implementation_found ${MPI_FOUND})
        if (MPI_FOUND)
            determine_mpi_mnemonic(MPI_MNEMONIC)
            log("Looking for an MPI ... Found ${MPI_MNEMONIC}")
            if (OPENCMISS_MPI STREQUAL MPI_MNEMONIC)
                set(_mpi_matched TRUE)
            else ()
                foreach(_lang C CXX Fortran)
                    if (MPI_${_lang}_COMPILER)
                        get_filename_component(_dir "${MPI_${_lang}_COMPILER}" DIRECTORY)
                        list(APPEND CMAKE_IGNORE_PATH "${_dir}")
                    endif ()
                    list(REMOVE_DUPLICATES CMAKE_IGNORE_PATH)
                endforeach()
            endif ()
        else ()
            log("Looking for an MPI ... Not found")
        endif ()
    endwhile()
    unset(CMAKE_IGNORE_PATH)
endif ()
set(DEBUG_MESSAGE FALSE)

